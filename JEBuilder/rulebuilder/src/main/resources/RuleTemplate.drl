
template header

ruleName
salience
condition
consequence
enabled
persistence
resetPersistenceRule
notCondition
dateEffective
cronExpression
dateExpires

package io.je.runtime;

import java.time.LocalDateTime;
import java.time.Instant;
import java.util.Date;
import java.util.HashMap;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Double;
import java.lang.String;
import io.je.utilities.log.JELogger;
import io.je.utilities.execution.Executioner;
import io.je.utilities.beans.JEEvent;
import io.je.utilities.beans.JEVariable;
import io.je.utilities.beans.JEMessage;
import io.je.utilities.beans.JEBlockMessage;
import io.je.ruleengine.control.Persistence;
import io.je.ruleengine.control.PersistenceMap;
import io.je.ruleengine.control.OrLogicManager;
import io.je.ruleengine.utils.JEMathUtils;
import io.je.project.variables.VariableManager;
import utils.maths.*;

import ${customImport};


template "JobEngineRuleTemplate"


rule "@{ruleName}"  @Propagation(IMMEDIATE)
dialect "mvel"
salience @{salience}
enabled @{enabled}
no-loop true
date-effective @{dateEffective}
date-expires @{dateExpires}
timer (cron:@{cronExpression})

when

    @{condition}

then

    if (PersistenceMap.getRulesPersistenceMap().get("@{ruleName}") == null) {

        PersistenceMap.getRulesPersistenceMap().put("@{ruleName}", new Persistence());

    }

    Persistence rulePersistence = PersistenceMap.getRulesPersistenceMap().get("@{ruleName}");

    if (rulePersistence.getDuration() == null) {

        rulePersistence.setStartTimestamp( Instant.now().toEpochMilli() );

    }

    rulePersistence.setDuration( Instant.now().toEpochMilli() - rulePersistence.getStartTimestamp() );

    if (rulePersistence.getDuration() >= @{persistence}) {

        rulePersistence.setDuration( null );
        rulePersistence.setStartTimestamp( null );

        // FIXME should be better, but DO NOT CHANGE, unless aware
        // TODO Possible solution make different drl for persistence, OR Logic, OR Logic with persistence
        if ( OrLogicManager.getRuleMatchCounter("@{ruleName}") == null ) {

            @{consequence}

        } else if (OrLogicManager.getRuleMatchCounter("@{ruleName}") > 0 ) {

            OrLogicManager.resetRuleMatch("@{ruleName}");

            @{consequence}

/*
            System.err.println("OrLogicManager.getRuleMatchCounter('@{ruleName}') after RESET : "
                                    + OrLogicManager.getRuleMatchCounter("@{ruleName}") );

        } else {

            System.err.println("OrLogicManager.getRuleMatchCounter('@{ruleName}') No consequence : "
                                    + OrLogicManager.getRuleMatchCounter("@{ruleName}") );
*/
        }

    }

end

@{resetPersistenceRule}

end template

